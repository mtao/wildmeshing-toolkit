
#pragma once
#include <wmtk/autogen/edge_mesh/autogenerated_tables.hpp>
#include <wmtk/autogen/tri_mesh/autogenerated_tables.hpp>
#include <wmtk/autogen/tet_mesh/autogenerated_tables.hpp>
#include <wmtk/dart/SimplexDart.hpp>

namespace wmtk::dart::utils {

inline int8_t
get_canonical_subdart(const SimplexDart& sd, PrimitiveType pt, int8_t simplex_index)
{
    const PrimitiveType source_pt = sd.simplex_type();

    if (source_pt == PrimitiveType::Edge) {
        if (pt == PrimitiveType::Vertex) {
            return autogen::edge_mesh::canonical_subdart[get_primitive_type_id(pt) ][simplex_index];
        }
    } else if (source_pt == PrimitiveType::Triangle) {
        if (pt <= PrimitiveType::Edge) {
            return autogen::tri_mesh::canonical_subdart[get_primitive_type_id(pt) ][simplex_index];
        }
    } else if (source_pt == PrimitiveType::Tetrahedron) {
        if (pt <= PrimitiveType::Triangle) {
            return autogen::tet_mesh::canonical_subdart[get_primitive_type_id(pt) ]
                                                                   [simplex_index];
        }
    }
    return sd.identity();
}
} // namespace wmtk::dart::utils
