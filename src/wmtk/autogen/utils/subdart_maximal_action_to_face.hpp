#pragma once
// DO NOT MODIFY, autogenerated from the /scripts directory
#include <array>
#include <cstdint>
#include <wmtk/PrimitiveType.hpp>

namespace wmtk::autogen::utils {
// given a specific type of mesh, a dart, and the specification of a simplex via (primitivetype/index) finds the dart that such that 
// dart \cap subdart_maximal_action_to_face_action(mesh_type,dart_index, primitive_type, simplex_index) is as large as possible.
int8_t subdart_maximal_action_to_face_action(
    PrimitiveType mesh_type,
    int8_t dart_index,
    PrimitiveType primitive_type,
    int8_t simplex_index);
int8_t subdart_maximal_action_to_face_action(
    PrimitiveType mesh_type,
    int8_t dart_index,
    int8_t simplex_dimension,
    int8_t simplex_index);



// samea s above, but also returns the size of the maximal subdart returned by the image intersected with the input dart
std::array<int8_t, 2> subdart_maximal_action_to_face(
    PrimitiveType mesh_type,
    int8_t dart_index,
    PrimitiveType primitive_type,
    int8_t simplex_index);
std::array<int8_t, 2> subdart_maximal_action_to_face(
    PrimitiveType mesh_type,
    int8_t dart_index,
    int8_t simplex_dimension,
    int8_t simplex_index);
} // namespace wmtk::autogen::utils
