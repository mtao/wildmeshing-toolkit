name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CTEST_OUTPUT_ON_FAILURE: ON
  CTEST_PARALLEL_LEVEL: 3

jobs:
  ####################
  # Linux
  ####################

  Linux:
    name: ${{ matrix.name }} (${{ matrix.config }})
    runs-on: [ubuntu-latest]
    #runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        config: [Debug, Release]
        include:
          - os: ubuntu-latest
            name: Linux
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 10

      - name: Dependencies
        run: |
          sudo apt-get update
          sudo apt-get -o Acquire::Retries=3 install \
          ccache
          echo 'CACHE_PATH=~/.ccache' >> "$GITHUB_ENV"

      - name: Cache Build
        id: cache-build
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ runner.os }}-${{ matrix.config }}-cache-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ matrix.config }}-cache

      - name: Prepare ccache
        run: |
          ccache --max-size=10.0G
          ccache -V && ccache --show-stats && ccache --zero-stats

      - name: Configure
        run: |
          mkdir -p build
          cd build
          cmake .. \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DCMAKE_BUILD_TYPE=${{ matrix.config }}

      - name: Build
        run: cd build; make -j4; ccache --show-stats

      - name: Tests
        run: cd build; ctest --verbose --output-on-failure -j4

  ####################
  # MacOS
  ####################

  MacOS:
    name: ${{ matrix.os }} (${{ matrix.config }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, macos-14]
        config: [Debug, Release]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 10

      - name: Dependencies
        run: |
          brew install ccache
          echo 'CACHE_PATH=~/Library/Caches/ccache' >> "$GITHUB_ENV"

      - name: Cache Build
        id: cache-build
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ runner.os }}-${{ matrix.config }}-cache-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ matrix.config }}-cache

      - name: Prepare ccache
        run: |
          ccache --max-size=10.0G
          ccache -V && ccache --show-stats && ccache --zero-stats

      - name: Configure
        run: |
          mkdir -p build
          cd build
          cmake .. \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DCMAKE_BUILD_TYPE=${{ matrix.config }}

      - name: Build
        run: cd build; make -j3; ccache --show-stats

      - name: Tests
        run: cd build; ctest --verbose --output-on-failure -j3

  ####################
  # Windows
  ####################

  Windows:
    name: Windows (${{ matrix.config }})
    runs-on: [windows-latest]
    env:
      SCCACHE_IDLE_TIMEOUT: "12000"
    strategy:
      fail-fast: false
      matrix:
        config: [Debug, Release]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 10

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Dependencies
        run: |
          choco install ccache
          "CACHE_PATH=${env:LOCALAPPDATA}\ccache" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Cache build
        id: cache-build
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ runner.os }}-${{ matrix.config }}-cache-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ matrix.config }}-cache

      - name: Prepare ccache
        run: |
          ccache --max-size=1.0G
          ccache -V && ccache --show-stats && ccache --zero-stats

      - name: Configure and build
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat" -arch=x64
          cmake -G Ninja ^
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache ^
            -DCMAKE_BUILD_TYPE=${{ matrix.config }} ^
            -B build ^
            -S .
      - name: Build
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat" -arch=x64
          cmake --build build -j4 && ccache --show-stats

      - name: Tests
        shell: cmd
        run: |
          cd build
          ctest --verbose --output-on-failure -j4
